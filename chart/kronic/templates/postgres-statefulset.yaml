{{- if .Values.database.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "kronic.fullname" . }}-postgres
  labels:
    {{- include "kronic.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  serviceName: {{ include "kronic.fullname" . }}-postgres
  replicas: 1
  selector:
    matchLabels:
      {{- include "kronic.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: database
  template:
    metadata:
      labels:
        {{- include "kronic.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: database
    spec:
      {{- with .Values.database.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.database.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.database.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: postgres
          image: "{{ .Values.database.image.repository }}:{{ .Values.database.image.tag }}"
          imagePullPolicy: {{ .Values.database.image.pullPolicy }}
          env:
            - name: POSTGRES_DB
              value: {{ .Values.database.name }}
            - name: POSTGRES_USER
              value: {{ .Values.database.user }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.existingSecret | default (printf "%s-postgres" (include "kronic.fullname" .)) }}
                  key: {{ .Values.database.existingSecretKey }}
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U {{ .Values.database.user }} -d {{ .Values.database.name }} -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U {{ .Values.database.user }} -d {{ .Values.database.name }} -h 127.0.0.1 -p 5432
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
            {{- toYaml .Values.database.resources | nindent 12 }}
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
  {{- if .Values.database.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
        labels:
          {{- include "kronic.labels" . | nindent 10 }}
          app.kubernetes.io/component: database
      spec:
        accessModes:
          {{- range .Values.database.persistence.accessModes }}
          - {{ . | quote }}
          {{- end }}
        {{- if .Values.database.persistence.storageClass }}
        storageClassName: {{ .Values.database.persistence.storageClass | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.database.persistence.size | quote }}
  {{- else }}
      volumes:
        - name: postgres-data
          emptyDir: {}
  {{- end }}
{{- end }}